TITLE:: PV_InvTransp
summary::  Invert and Transpose bins
categories:: Libraries>PV_Inversions, UGens>FFT
related:: Classes/PV_Transp, Classes/PV_Inverse_0, Classes/PV_Inverse_Exp, Classes/PV_Inv



DESCRIPTION::
Simple spectral inversion at the bin freqC and transposition to the bin freqT (without inverted distribution, see PV_DistrN), by Gr√©goire Bonnet (2018) - used on Idiom64 [link::https://gregoirebonnet.bandcamp.com/track/idiom64::].



CLASSMETHODS::

METHOD:: new

ARGUMENT:: buffer
An FFT buffer.

ARGUMENT:: freqC
Frequency of inversion

ARGUMENT:: freqT
Frequency of transposition






INSTANCEMETHODS::


EXAMPLES::

code::
s.boot;


(
SynthDef("noise-PV_InvTransp", { arg out=0, freqC=440, freqT=440;
	    var in, chain;
	    in = WhiteNoise.ar(0.2);
	    chain = FFT(LocalBuf(2048), in); //try different size
	    chain = PV_InvTransp(chain, freqC, freqT);
    Out.ar(out, 0.5 * IFFT(chain).dup);
}).play(s,[\freqC, 440, \freqT, 660]);
)

//

b = Buffer.read(s, Platform.resourceDir +/+ "sounds/a11wlk01.wav");

(
SynthDef("voice-PV_InvTransp", { arg out=0, soundBufnum=2, freqC=440, freqT=440;
    var in, chain;
    in = PlayBuf.ar(1, soundBufnum, BufRateScale.kr(soundBufnum), loop: 1);
    chain = FFT(LocalBuf(2048), in); //try different size
	chain = PV_InvTransp(chain, freqC, freqT);
    Out.ar(out, 0.5 * IFFT(chain).dup);
}).play(s, [\soundBufnum, b, \freqC, 8040, \freqT, 660]);
)


::
